[{"C:\\Users\\4manc\\Desktop\\fasttest\\src\\index.js":"1","C:\\Users\\4manc\\Desktop\\fasttest\\src\\App.js":"2","C:\\Users\\4manc\\Desktop\\fasttest\\src\\reportWebVitals.js":"3","C:\\Users\\4manc\\Desktop\\fasttest\\src\\pages\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\4manc\\Desktop\\fasttest\\src\\pages\\LoginPage\\LoginPage.js":"5","C:\\Users\\4manc\\Desktop\\fasttest\\src\\pages\\MainPage\\MainPage.js":"6","C:\\Users\\4manc\\Desktop\\fasttest\\src\\components\\Card\\Card.js":"7","C:\\Users\\4manc\\Desktop\\fasttest\\src\\components\\Button\\Button.js":"8","C:\\Users\\4manc\\Desktop\\fasttest\\src\\components\\Input\\Input.js":"9","C:\\Users\\4manc\\Desktop\\fasttest\\src\\config\\firebase-config.js":"10","C:\\Users\\4manc\\Desktop\\fasttest\\src\\components\\Auth\\Auth.js":"11"},{"size":469,"mtime":1607533787307,"results":"12","hashOfConfig":"13"},{"size":640,"mtime":1607603258565,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2053,"mtime":1607603258596,"results":"16","hashOfConfig":"13"},{"size":1527,"mtime":1607603258496,"results":"17","hashOfConfig":"13"},{"size":3436,"mtime":1607603258512,"results":"18","hashOfConfig":"13"},{"size":237,"mtime":1607536580678,"results":"19","hashOfConfig":"13"},{"size":283,"mtime":1607539135244,"results":"20","hashOfConfig":"13"},{"size":326,"mtime":1607536800612,"results":"21","hashOfConfig":"13"},{"size":469,"mtime":1607538602350,"results":"22","hashOfConfig":"13"},{"size":650,"mtime":1607540417635,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1lo71cd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\4manc\\Desktop\\fasttest\\src\\index.js",[],["50","51"],"C:\\Users\\4manc\\Desktop\\fasttest\\src\\App.js",[],"C:\\Users\\4manc\\Desktop\\fasttest\\src\\reportWebVitals.js",[],"C:\\Users\\4manc\\Desktop\\fasttest\\src\\pages\\RegisterPage\\RegisterPage.js",["52"],"import React, {useState} from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport firebaseConfig from '../../config/firebase-config';\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction RegisterPage() {\r\n\r\n  const history = useHistory()\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { email, password,last,first } = e.target.elements;\r\n    try {\r\n      await firebaseConfig.auth().createUserWithEmailAndPassword(email.value, password.value)\r\n        .then(function (user) {\r\n          console.log(user.user.uid)\r\n          firebase.database().ref(`users/${user.user.uid}`).set(\r\n            {\r\n              lastName: last.value,\r\n              firstName: first.value,\r\n              bigScreenTimer: 0,\r\n              smallScreenTimer: 0\r\n            }\r\n          )\r\n        })\r\n\r\n      setCurrentUser(true);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className='login-register__card'>\r\n        <span className='login-register__label m-b-20px'>Register</span>\r\n        <form className='w-100 d-flex' onSubmit={handleSubmit}>\r\n          <Input className='m-b-20px' type='text' name='first' label='First Name'/>\r\n          <Input className='m-b-20px' type='text' name='last' label='Last Name'/>\r\n          <Input className='m-b-20px' type='email' name='email' label='Email'/>\r\n          <Input className='m-b-20px' type='password' name='password' label='Password'/>\r\n          <Button type='submit' className='m-b-40px' title='Register'/>\r\n        </form>\r\n        <a className='login-register'>\r\n          Already registered?\r\n          <span onClick={()=>(history.push('/login'))}>Log in</span>\r\n        </a>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage","C:\\Users\\4manc\\Desktop\\fasttest\\src\\pages\\LoginPage\\LoginPage.js",["53"],"import React, {useContext} from \"react\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../components/Auth/Auth\";\r\nimport firebaseConfig from \"../../config/firebase-config\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport Button from \"../../components/Button/Button\"\r\nimport Input from \"../../components/Input/Input\"\r\n\r\nfunction LoginPage() {\r\n\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {email, password} = e.target.elements;\r\n    try {\r\n      firebaseConfig.auth().signInWithEmailAndPassword(email.value, password.value);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const {currentUser} = useContext(AuthContext);\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\"/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className='login-register__card center'>\r\n        <span className='login-register__label m-b-40px'>Login</span>\r\n        <form className='w-100 d-flex' onSubmit={handleSubmit}>\r\n          <Input className='m-b-40px' type='email' name='email' label='Email'/>\r\n          <Input className='m-b-40px' type='password' name='password' label='Password'/>\r\n          <Button type='submit' className='m-b-40px' title='Login'/>\r\n        </form>\r\n        <a className='login-register'>\r\n          Donâ€™t have an account yet?\r\n          <span className='redirect' onClick={() => (history.push('/register'))}>Register</span>\r\n        </a>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\4manc\\Desktop\\fasttest\\src\\pages\\MainPage\\MainPage.js",["54","55","56"],"import React, {useContext, useState, useEffect} from \"react\";\r\nimport './mainPage.css'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../components/Auth/Auth\";\r\nimport firebaseConfig from \"../../config/firebase-config\";\r\nimport firebase from \"firebase\";\r\nimport Card from \"../../components/Card/Card\";\r\n\r\nfunction MainPage() {\r\n\r\n  const userId = firebase.auth().currentUser ? firebase.auth().currentUser.uid : null;\r\n\r\n  const [bigScreen, setBigScreen] = useState(0)\r\n  const [smallScreen, setSmallScreen] = useState(0)\r\n\r\n  let width = window.innerWidth\r\n\r\n  const updateTimerBig = (uid, bigScreenTimer) => {\r\n\r\n    let postData = {\r\n      bigScreenTimer,\r\n    }\r\n\r\n    firebase.database().ref(`users/${userId}`).update(postData)\r\n  }\r\n  const updateTimerSmall = (uid, smallScreenTimer) => {\r\n\r\n    let postData = {\r\n      smallScreenTimer,\r\n    }\r\n\r\n    firebase.database().ref(`users/${userId}`).update(postData)\r\n  }\r\n\r\n  const setBig = () => {\r\n    setBigScreen(bigScreen => bigScreen + 1)\r\n\r\n  }\r\n  const setSmall = () => {\r\n    setSmallScreen(smallScreen => smallScreen + 1)\r\n  }\r\n\r\n  let timerRef = firebase.database().ref('users/' + userId)\r\n\r\n  useEffect(() => {\r\n    timerRef.once('value').then(function (snapshot) {\r\n      const data = snapshot.val()\r\n      setBigScreen(data.bigScreenTimer)\r\n      setSmallScreen(data.smallScreenTimer)\r\n    })\r\n    let timer = setInterval(async function () {\r\n      if (width > 400) {\r\n        setBig()\r\n      } else if (width <= 400) {\r\n        setSmall()\r\n      }\r\n\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [])\r\n\r\n  const updateHelper = async () => {\r\n    let data = {}\r\n    await timerRef.once('value').then(function (snapshot) {\r\n      data = snapshot.val()\r\n      if (width <= 400) {\r\n        setBigScreen(data.bigScreenTimer)\r\n      }\r\n      if (width > 400) {\r\n        setSmallScreen(data.smallScreenTimer)\r\n      }\r\n    })\r\n    if (width <= 400) {\r\n      await updateTimerSmall(userId, smallScreen)\r\n    } else if (width > 400) {\r\n      await updateTimerBig(userId, bigScreen)\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateHelper()\r\n  }, [bigScreen, smallScreen])\r\n\r\n  const {currentUser} = useContext(AuthContext);\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\"/>;\r\n  }\r\n\r\n  function secondsToHms(d) {\r\n    d = Number(d);\r\n    let h = Math.floor(d / 3600);\r\n    let m = Math.floor(d % 3600 / 60);\r\n    let s = Math.floor(d % 3600 % 60);\r\n\r\n    let hDisplay = h < 10 ? '0' + h + ':' : h + ':';\r\n    let mDisplay = m < 10 ? '0' + m + ':' : m + ':';\r\n    let sDisplay = s < 10 ? '0' + s : s;\r\n    return hDisplay + mDisplay + sDisplay;\r\n  }\r\n\r\n  return (\r\n    <div className='height100'>\r\n      <a className='main__logout' onClick={() => firebaseConfig.auth().signOut()}>Log out</a>\r\n      <div className='main__container'>\r\n        <div className='card_container'>\r\n          <span className='screen_label'>Desktop</span>\r\n          <Card className='main__card position_relative'>\r\n            <div className='center timer'>{secondsToHms(bigScreen)}</div>\r\n          </Card>\r\n        </div>\r\n        <div className='card_container'>\r\n          <span className='screen_label'>Mobile</span>\r\n          <Card className='main__card position_relative'>\r\n            <div className='center timer'>{secondsToHms(smallScreen)}</div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage","C:\\Users\\4manc\\Desktop\\fasttest\\src\\components\\Card\\Card.js",[],"C:\\Users\\4manc\\Desktop\\fasttest\\src\\components\\Button\\Button.js",[],"C:\\Users\\4manc\\Desktop\\fasttest\\src\\components\\Input\\Input.js",[],"C:\\Users\\4manc\\Desktop\\fasttest\\src\\config\\firebase-config.js",[],"C:\\Users\\4manc\\Desktop\\fasttest\\src\\components\\Auth\\Auth.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":50,"column":9,"nodeType":"63","endLine":50,"endColumn":39},{"ruleId":"61","severity":1,"message":"62","line":36,"column":9,"nodeType":"63","endLine":36,"endColumn":39},{"ruleId":"64","severity":1,"message":"65","line":63,"column":7,"nodeType":"66","endLine":63,"endColumn":9,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":86,"column":6,"nodeType":"66","endLine":86,"endColumn":29,"suggestions":"69"},{"ruleId":"61","severity":1,"message":"62","line":107,"column":7,"nodeType":"63","endLine":107,"endColumn":83},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'timerRef' and 'width'. Either include them or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'updateHelper'. Either include it or remove the dependency array.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [timerRef, width]",{"range":"78","text":"79"},"Update the dependencies array to be: [bigScreen, smallScreen, updateHelper]",{"range":"80","text":"81"},[1589,1591],"[timerRef, width]",[2108,2131],"[bigScreen, smallScreen, updateHelper]"]